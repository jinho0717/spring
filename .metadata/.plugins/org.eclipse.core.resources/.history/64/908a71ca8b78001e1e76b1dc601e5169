package com.myweb.www.controller;

import java.security.Principal;
import java.util.List;

import javax.inject.Inject;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.myweb.www.domain.CommentVO;
import com.myweb.www.domain.PagingVO;
import com.myweb.www.handler.PagingHandler;
import com.myweb.www.service.CommentService;

import lombok.extern.slf4j.Slf4j;

@RestController
@RequestMapping("/comment/*")
@Slf4j
public class CommentController {

	@Inject
	private CommentService csv;
	
	@PostMapping(value = "/post", consumes = "application/json" , produces = MediaType.TEXT_PLAIN_VALUE)
	public ResponseEntity<String> post(@RequestBody CommentVO cvo){
		
		int isOk = csv.insert(cvo);
		return isOk >0 ? new ResponseEntity<String>("1", HttpStatus.OK) :
			new ResponseEntity<String>("0",HttpStatus.INTERNAL_SERVER_ERROR);
	}
	
	@GetMapping(value = "/{bno}/{page}", produces = MediaType.APPLICATION_JSON_VALUE)
	public ResponseEntity<PagingHandler> spread(@PathVariable("bno")long bno ,
			@PathVariable("page")int page){
		log.info(">> comment List bno >> ");
		log.info(">> page"+bno+page);
		PagingVO pgvo = new PagingVO(page, 5);
//		List<CommentVO> list = csv.getList(bno, pgvo);
		return new ResponseEntity<PagingHandler>(csv.getList(bno, pgvo), HttpStatus.OK);
	}
	
	@DeleteMapping(value = "/{cno}/{writer}")
	public ResponseEntity<String> delete(@PathVariable("cno")int cno,
			@PathVariable("writer")String writer , Principal principal ){
		int isOk = 0;
		if(writer.equals(principal.getName())) {
			isOk = csv.delete(cno);			
		}
		return isOk > 0 ? new ResponseEntity<String>("1", HttpStatus.OK) :
			new ResponseEntity<String>("0", HttpStatus.INTERNAL_SERVER_ERROR);
	}
	
	@PutMapping(value = "/{cno}", consumes = "application/json",
			produces = MediaType.TEXT_PLAIN_VALUE)
	public ResponseEntity<String> update(@PathVariable("cno")long cno, 
			@RequestBody CommentVO cvo
			principal principal){
		log.info(">> cno / cvo >> "+ cno + "/" + cvo);
		int isOk = csv.update(cvo);
		return isOk > 0 ? new ResponseEntity<String>("1", HttpStatus.OK) :
			new ResponseEntity<String>("0", HttpStatus.INTERNAL_SERVER_ERROR);
	}
}
